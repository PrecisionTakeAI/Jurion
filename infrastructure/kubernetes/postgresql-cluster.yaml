apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql-primary
  namespace: legalai-hub
  labels:
    app: postgresql
    role: primary
    component: database
spec:
  serviceName: postgresql-primary-svc
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
      role: primary
  template:
    metadata:
      labels:
        app: postgresql
        role: primary
        component: database
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9187"
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
      - name: postgresql
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          value: legalai
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: password
        - name: POSTGRES_REPLICATION_USER
          value: replicator
        - name: POSTGRES_REPLICATION_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: replication-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
        - name: postgresql-config
          mountPath: /etc/postgresql
        - name: backup-config
          mountPath: /etc/pgbackrest
        resources:
          requests:
            memory: "8Gi"
            cpu: "2"
          limits:
            memory: "16Gi"
            cpu: "4"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
          initialDelaySeconds: 5
          periodSeconds: 5
      - name: postgres-exporter
        image: prometheuscommunity/postgres-exporter:v0.12.0
        ports:
        - containerPort: 9187
          name: metrics
        env:
        - name: DATA_SOURCE_NAME
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@localhost:5432/legalai?sslmode=disable"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: password
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: postgresql-config
        configMap:
          name: postgresql-config
      - name: backup-config
        configMap:
          name: pgbackrest-config
  volumeClaimTemplates:
  - metadata:
      name: postgresql-data
      labels:
        app: postgresql
        role: primary
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: fast-ssd
      resources:
        requests:
          storage: 500Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql-standby
  namespace: legalai-hub
  labels:
    app: postgresql
    role: standby
    component: database
spec:
  serviceName: postgresql-standby-svc
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
      role: standby
  template:
    metadata:
      labels:
        app: postgresql
        role: standby
        component: database
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
      - name: postgresql
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: PGUSER
          value: postgres
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: password
        - name: POSTGRES_MASTER_SERVICE
          value: postgresql-primary-svc
        - name: POSTGRES_REPLICATION_USER
          value: replicator
        - name: POSTGRES_REPLICATION_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: replication-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        command:
        - /bin/bash
        - -c
        - |
          set -e
          
          # Wait for primary to be ready
          until pg_isready -h $POSTGRES_MASTER_SERVICE -p 5432; do
            echo "Waiting for primary database..."
            sleep 5
          done
          
          # Create base backup from primary
          if [ ! -f "$PGDATA/PG_VERSION" ]; then
            echo "Creating base backup from primary..."
            pg_basebackup -h $POSTGRES_MASTER_SERVICE -D $PGDATA -U $POSTGRES_REPLICATION_USER -W -v -P
            
            # Configure standby
            cat >> $PGDATA/postgresql.conf << EOF
          hot_standby = on
          primary_conninfo = 'host=$POSTGRES_MASTER_SERVICE port=5432 user=$POSTGRES_REPLICATION_USER'
          EOF
            
            touch $PGDATA/standby.signal
          fi
          
          # Start PostgreSQL
          postgres
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
        - name: postgresql-config
          mountPath: /etc/postgresql
        resources:
          requests:
            memory: "4Gi"
            cpu: "1"
          limits:
            memory: "8Gi" 
            cpu: "2"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U postgres
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U postgres
          initialDelaySeconds: 30
          periodSeconds: 5
      volumes:
      - name: postgresql-config
        configMap:
          name: postgresql-config
  volumeClaimTemplates:
  - metadata:
      name: postgresql-data
      labels:
        app: postgresql
        role: standby
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: fast-ssd
      resources:
        requests:
          storage: 500Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-primary-svc
  namespace: legalai-hub
  labels:
    app: postgresql
    role: primary
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
  - port: 9187
    targetPort: 9187
    name: metrics
  selector:
    app: postgresql
    role: primary
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-standby-svc
  namespace: legalai-hub
  labels:
    app: postgresql
    role: standby
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
  selector:
    app: postgresql
    role: standby
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-read-only
  namespace: legalai-hub
  labels:
    app: postgresql
    service-type: read-only
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
  selector:
    app: postgresql
    role: standby